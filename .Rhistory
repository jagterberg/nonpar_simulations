if(!require(foreach)) {
install.packages("foreach")
library(foreach)
}
numcores <- detectCores()
if(!require(parallel)) {
install.packages("parallel")
library(parallel)
}
numcores <- detectCores()
numcores <- detectCores()
epsilons <- c(0,.1,.2)
ns <- c(300,600,900)
print("packages loaded, running SBM simulation")
?foreach
?%do%
results_sbm <- list()
results_sbm[[1]] <- foreach(eps=epsilons) %do% {
results_sbm[[j]][[i]] <- run_simulation_sbm(eps = eps,ntimes = 100,n=ns[1])
}
source("./balanced_sbm/sbm_hyp_test.R")
getwd()
setwd("../")
getwd()
source("./balanced_sbm/sbm_hyp_test.R")
if(!require(foreach)) {
install.packages("foreach")
library(foreach)
}
if(!require(parallel)) {
install.packages("parallel")
library(parallel)
}
numcores <- detectCores()
epsilons <- c(0,.1,.2)
ns <- c(300,600,900)
print(paste0("packages loaded, running SBM simulation on",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns) %do% {
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
epsilons <- c(0)#,.1,.2)
ns <- c(100,200)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns) %do% {
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
epsilons <- c(0)#,.1,.2)
ns <- c(10,20)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns) %do% {
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
source("./balanced_sbm/sbm_hyp_test.R")
if(!require(foreach)) {
install.packages("foreach")
library(foreach)
}
if(!require(parallel)) {
install.packages("parallel")
library(parallel)
}
numcores <- detectCores()
epsilons <- c(0)#,.1,.2)
ns <- c(10,20)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns) %do% {
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
source('C:/Users/joshu/Dropbox/Documents/Research/grdpg_nonpar/nonpar_sims/balanced_sbm/sbm_hyp_test.R', echo=TRUE)
epsilons <- c(0)#,.1,.2)
ns <- c(10,20)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns) %do% {
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns) %dopar% {
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
numcores <- detectCores()
registerDoParallel(cores=numcores)
if(!require(foreach)) {
install.packages("foreach")
library(foreach)
}
if(!require(parallel)) {
install.packages("parallel")
library(parallel)
}
numcores <- detectCores()
registerDoParallel(cores=numcores)
if(!require(doParallel)) {
install.packages('doParallel')
library(doParallel)
}
numcores <- detectCores()
registerDoParallel(cores=numcores)
epsilons <- c(0)#,.1,.2)
ns <- c(10,20)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix')) %dopar% {
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
results_sbm <- foreach(eps=epsilons,n=ns,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix')) %dopar%
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
results_sbm <- foreach(eps=epsilons,n=ns,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix'),.noexport = c('generateAdjacencyMatrix')) %dopar%
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
View(generateAdjacencyMatrix)
results_sbm <- foreach(eps=epsilons,n=ns,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix'),.noexport = c('generateAdjacencyMatrix()')) %dopar%
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
View(generateAdjacencyMatrix)
if(!require(foreach)) {
install.packages("foreach")
library(foreach)
}
if(!require(parallel)) {
install.packages("parallel")
library(parallel)
}
if(!require(doParallel)) {
install.packages('doParallel')
library(doParallel)
}
numcores <- detectCores()
registerDoParallel(cores=numcores)
epsilons <- c(0)#,.1,.2)
ns <- c(10,20)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix'),.noexport = c('generateAdjacencyMatrix()')) %dopar% {
source("./balanced_sbm/sbm_hyp_test.R")
run_simulation_sbm(eps = eps,ntimes = 100,n=n)
}
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix'),.noexport = c('generateAdjacencyMatrix()')) %dopar% {
source("./balanced_sbm/sbm_hyp_test.R")
run_simulation_sbm(eps = eps,ntimes = 1,n=n)
}
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns
,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix')
) %dopar% {
source("./balanced_sbm/sbm_hyp_test.R")
run_simulation_sbm(eps = eps,ntimes = 1,n=n)
}
results_sbm
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns
,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix')
) %dopar% {
source("./balanced_sbm/sbm_hyp_test.R")
run_simulation_sbm(eps = eps,ntimes = 10,n=n)
}
View(generateAdjacencyMatrix)
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns
,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix')
,.noexport = "generateAdjacencyMatrix" ) %dopar% {
source("./balanced_sbm/sbm_hyp_test.R")
run_simulation_sbm(eps = eps,ntimes = 10,n=n)
}
results_sbm
epsilons <- c(0,.1,.2)
ns <- c(10,20)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns
,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix')
,.noexport = "generateAdjacencyMatrix" ) %dopar% {
source("./balanced_sbm/sbm_hyp_test.R")
run_simulation_sbm(eps = eps,ntimes = 10,n=n)
}
stopCluster()
registerDoParallel(cores=numcores)
epsilons <- c(0,.1,.2)
ns <- c(10,20)#,600,900)
print(paste0("packages loaded, running SBM simulation on ",numcores," cores."))
results_sbm <- list()
results_sbm <- foreach(eps=epsilons,n=ns
,.packages=c('nonparGraphTesting','irlba','igraph','Rcpp','Matrix')
,.noexport = "generateAdjacencyMatrix" ) %dopar% {
source("./balanced_sbm/sbm_hyp_test.R")
run_simulation_sbm(eps = eps,ntimes = 10,n=n)
}
results_sbm
results_sbm[[1]]
results_sbm[[1]][[1]]
